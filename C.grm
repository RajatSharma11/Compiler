%%


%verbose
%pure

%term
  EOF 
  | ID of string
  | CONST of int
  | STRING of string
  | COMMA | SEMICOLON | LPAREN | RPAREN | LBRACK | RBRACK
  | LBRACE | RBRACE
  | PLUS | MINUS | TIMES | DIVIDE 
  | EQ | NEQ | LT | LE | GT | GE
  | AND | OR | ASSIGN
  | IF | ELSE 
  | WHILE | BREAK | CONTINUE| FOR| RETURN| VAR
  | PRINTF | SCANF
  | INT | STR
%nonterm
  EXPRESSION of Ast.Expression
  |CONDITIONALEXPR of Ast.ConditionalExpr
  |STATEMENT of Ast.Statement
  |STATEMENTS of Ast.Statement list
  |CODE of Ast.Statement list
  | TYPES of Ast.types
  | DECL of Ast.Statement

%eop EOF
%noshift EOF

%name Comp
%keyword WHILE BREAK IF ELSE CONTINUE PRINTF SCANF

%value STRING ("")

%nonassoc ASSIGN
%left AND OR
%nonassoc EQ NEQ LT GT LE GE
%left PLUS MINUS
%left TIMES DIVIDE

%pos int

%%

CODE : STATEMENTS        (STATEMENTS)

STATEMENTS : STATEMENT    ([STATEMENT])
           | STATEMENT  STATEMENTS (STATEMENT :: STATEMENTS)


STATEMENT : ID ASSIGN EXPRESSION SEMICOLON	(Ast.Assignment (ID,EXPRESSION))
      	  | IF LPAREN CONDITIONALEXPR RPAREN LBRACE STATEMENTS RBRACE	( Ast.If (CONDITIONALEXPR,STATEMENTS) )
          | IF LPAREN CONDITIONALEXPR RPAREN LBRACE STATEMENTS RBRACE ELSE LBRACE STATEMENTS RBRACE	( Ast.IfElse  (CONDITIONALEXPR,STATEMENTS1,STATEMENTS2) )
          | WHILE LPAREN CONDITIONALEXPR RPAREN LBRACE STATEMENTS RBRACE	( Ast.While (CONDITIONALEXPR,STATEMENTS))
	  | SCANF LPAREN ID RPAREN SEMICOLON			(Ast.Scanf(ID))
	  | PRINTF LPAREN ID RPAREN SEMICOLON			(Ast.Printf(ID))
	  | DECL  (DECL)

EXPRESSION : ID 		(Ast.Var(ID))
           | CONST		(Ast.Const CONST )
	   | STRING		(Ast.String(STRING))
           | EXPRESSION PLUS EXPRESSION	(Ast.plus EXPRESSION1 EXPRESSION2)
           | EXPRESSION MINUS EXPRESSION	(Ast.minus EXPRESSION1 EXPRESSION2)
           | EXPRESSION TIMES EXPRESSION	(Ast.mul EXPRESSION1 EXPRESSION2)
           | EXPRESSION DIVIDE EXPRESSION	(Ast.divi EXPRESSION1 EXPRESSION2)

TYPES     : INT       (Ast.INT)
          | STR       (Ast.STR)

DECL      : TYPES ID SEMICOLON  (Ast.declexp TYPES ID (Ast.Const(0)))
          | TYPES ID ASSIGN EXPRESSION SEMICOLON     (Ast.declexp TYPES ID EXPRESSION)    




CONDITIONALEXPR : EXPRESSION LT EXPRESSION	(Ast.lt EXPRESSION1 EXPRESSION2)
		| EXPRESSION LE EXPRESSION	(Ast.lte EXPRESSION1 EXPRESSION2)
		| EXPRESSION GT EXPRESSION	(Ast.gt EXPRESSION1 EXPRESSION2)
		| EXPRESSION GE EXPRESSION	(Ast.gte EXPRESSION1 EXPRESSION2)
		| EXPRESSION EQ EXPRESSION	(Ast.eq EXPRESSION1 EXPRESSION2)
		| CONDITIONALEXPR AND CONDITIONALEXPR	(Ast.aNd CONDITIONALEXPR1 CONDITIONALEXPR2)
		| CONDITIONALEXPR OR CONDITIONALEXPR	(Ast.oR CONDITIONALEXPR1 CONDITIONALEXPR2)
		| EXPRESSION NEQ EXPRESSION (Ast.neq EXPRESSION1 EXPRESSION2)




